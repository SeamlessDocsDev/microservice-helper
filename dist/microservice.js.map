{"version":3,"sources":["../lib/microservice.js"],"names":["doFn","$pipePromise","fnc","state","critical","promise","Promise","resolve","reject","fncCalled","_successHandler","then","fncState","catch","_errorHandler","error","nState","Object","assign","console","warn","scope","$pipe","_generateState","seneca","msg","notAllowedKeys","nMsg","key","indexOf","done","returnData","tryFnc","finalState","ok","data","err"],"mappings":"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","file":"microservice.js","sourcesContent":["// NOTE: we need to remove no-labels for this project, try to avoid this kind of fixes\n/* eslint-disable no-labels */\n\nimport {printModule} from './debug'\n\nclass $pipePromise {\n  constructor (fnc, state, critical) {\n    this.state = state\n    this.promise = new Promise((resolve, reject) => {\n      try {\n        const fncCalled = fnc(this.state)\n\n        if (!(fncCalled instanceof Promise)) {\n          return this._successHandler(fncCalled, resolve)\n        }\n\n        return fncCalled.then(fncState => {\n          return this._successHandler(fncState, resolve)\n        })\n        .catch(error => {\n          return this._errorHandler(error, critical, reject, resolve)\n        })\n      } catch (error) {\n        return this._errorHandler(error, critical, reject, resolve)\n      }\n    })\n  }\n\n  _successHandler (nState, resolve) {\n    this.state = Object.assign({}, this.state, nState)\n    return resolve(this.state)\n  }\n\n  _errorHandler (error, critical, reject, resolve) {\n    if (critical || this.critical) {\n      this.critical = true\n      return reject(error)\n    }\n    console.warn(error)\n    this.state = Object.assign({}, this.state, {error})\n    return resolve(this.state)\n  }\n\n  then (fnc, critical) {\n    this.promise = this.promise.then(fnc)\n        .then(nState => {\n          this.state = Object.assign({}, this.state, nState)\n\n          return this.state\n        })\n        .catch(error => {\n          if (critical || this.critical) {\n            this.critical = true\n            throw error\n          }\n          console.warn(error)\n          this.state = Object.assign({}, this.state, {error})\n          return this.state\n        })\n\n    return this\n  }\n\n  debug (scope = 'default') {\n    return this.then(printModule(scope))\n  }\n}\n\nfunction $pipe (fnc, state, critical) {\n  return new $pipePromise(fnc, state, critical)\n}\n\nfunction _generateState (seneca, msg) {\n  const notAllowedKeys = ['caller$', 'meta$', 'plugin$', 'tx$']\n  let nMsg = {}\n\n  for (let key in msg) {\n    if (notAllowedKeys.indexOf(key) > -1) continue\n    nMsg[key] = msg[key]\n  }\n\n  return Object.assign({}, {seneca}, nMsg)\n}\n\nexport function doFn (fnc) {\n  return function (msg, done) {\n    const state = _generateState(this, msg)\n\n    let returnData = {}\n\n    tryFnc:\n      try {\n        const finalState = fnc($pipe, true, state)\n\n        if (!(finalState instanceof $pipePromise)) {\n          returnData = {ok: true, data: finalState}\n          break tryFnc\n        }\n\n        finalState.promise.then(finalState => {\n          done(null, {ok: true, data: finalState})\n        })\n                  .catch(err => {\n                    console.error(err)\n                    done(null, {ok: false, error: err})\n                  })\n        return\n      } catch (err) {\n        returnData = {ok: false, error: err}\n      }\n\n    done(null, returnData)\n  }\n}\n"]}