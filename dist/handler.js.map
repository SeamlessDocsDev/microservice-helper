{"version":3,"sources":["../lib/handler.js"],"names":["handle","errors","require","id","err","key","replace","undefined","e","Error","code","stack","oldError"],"mappings":";;;;;QAIgBA,M,GAAAA,M;;AAJhB;;;;;;AAEA,IAAMC,SAASC,0CAAf;;AAEO,SAASF,MAAT,CAAiBG,EAAjB,EAAqBC,GAArB,EAA0B;;AAE/B,MAAIC,MAAMF,GAAGG,OAAH,CAAW,IAAX,EAAiB,EAAjB,CAAV;;AAEA,MAAIL,OAAOI,GAAP,KAAeE,SAAnB,EAA8B,OAAOP,OAAO,cAAP,EAAuBI,GAAvB,CAAP;;AAE9B,MAAII,IAAK,IAAIC,KAAJ,CAAUR,OAAOI,GAAP,CAAV,CAAT;AACAG,IAAEE,IAAF,SAAaL,GAAb;AACA,MAAID,GAAJ,EAASI,EAAEG,KAAF,GAAUP,IAAIO,KAAd;AACT,MAAIN,QAAQ,cAAZ,EAA4BG,EAAEI,QAAF,GAAaR,GAAb;;AAE5B,SAAOI,CAAP;AAED","file":"handler.js","sourcesContent":["import root from 'app-root-path'\n\nconst errors = require(`${root}/errors`)\n\nexport function handle (id, err) {\n\n  let key = id.replace(/^#/, \"\")\n\n  if (errors[key] == undefined) return handle('unknownError', err)\n\n  let e  = new Error(errors[key])\n  e.code = `#${key}`\n  if (err) e.stack = err.stack\n  if (key === 'unknownError') e.oldError = err\n\n  return e\n\n}"]}